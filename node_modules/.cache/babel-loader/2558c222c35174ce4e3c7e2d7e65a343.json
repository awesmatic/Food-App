{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  showCart: false,\n  mealItems: [],\n  quantity: 0,\n  totalCounter: 0,\n  totalAmount: 0,\n  currentItemPrice: 0\n};\nconst foodSlice = createSlice({\n  name: \"food\",\n  initialState,\n  reducers: {\n    showCurrentItemPrice(state, action) {\n      state.currentItemPrice = action.payload;\n    },\n\n    showCart(state) {\n      state.showCart = !state.showCart;\n    },\n\n    addItem(state, action) {\n      state.mealItems.push(action.payload.foodDetail);\n    },\n\n    totalCounter(state, action) {\n      state.totalCounter = state.totalCounter + action.payload;\n    },\n\n    totalAmount(state, action) {\n      state.totalAmount += +action.payload * +state.quantity;\n    },\n\n    setQuantity(state, action) {\n      state.quantity = action.payload;\n    },\n\n    updateQuantity(state, action) {\n      const {\n        index\n      } = action.payload;\n      const prevQuantity = state.mealItems[index].quantity;\n      state.mealItems[index].quantity = +prevQuantity + +state.quantity;\n    },\n\n    removeItem(state, action) {\n      const {\n        id\n      } = action.payload;\n      const selectedItemIndex = state.mealItems.findIndex(item => item.id === id);\n\n      if (state.mealItems[selectedItemIndex].quantity === +1) {\n        state.totalCounter -= 1;\n        state.totalAmount = state.totalAmount - state.currentItemPrice;\n        state.mealItems = state.mealItems.filter(item => item.id !== id);\n      } else {\n        state.mealItems[selectedItemIndex].quantity--;\n        state.totalCounter -= 1;\n        state.totalAmount = state.totalAmount - state.currentItemPrice;\n      }\n    },\n\n    increaseItem(state, action) {\n      const {\n        id\n      } = action.payload;\n      state.totalCounter += 1;\n      const selectedItemIndex = state.mealItems.findIndex(item => item.id === id);\n      state.mealItems[selectedItemIndex].quantity = parseInt(state.mealItems[selectedItemIndex].quantity) + 1;\n      state.totalAmount += state.currentItemPrice;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: foodSlice.reducer\n});\nconst foodAction = foodSlice.actions;\nexport default store;\nexport { foodAction };","map":{"version":3,"sources":["C:/Users/HP-PC/Desktop/portfolio projects/food-order/src/store/Reducer.js"],"names":["configureStore","createSlice","initialState","showCart","mealItems","quantity","totalCounter","totalAmount","currentItemPrice","foodSlice","name","reducers","showCurrentItemPrice","state","action","payload","addItem","push","foodDetail","setQuantity","updateQuantity","index","prevQuantity","removeItem","id","selectedItemIndex","findIndex","item","filter","increaseItem","parseInt","store","reducer","foodAction","actions"],"mappings":"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","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  showCart: false,\r\n  mealItems: [],\r\n  quantity: 0,\r\n  totalCounter: 0,\r\n  totalAmount: 0,\r\n  currentItemPrice: 0,\r\n};\r\nconst foodSlice = createSlice({\r\n  name: \"food\",\r\n  initialState,\r\n  reducers: {\r\n    showCurrentItemPrice(state, action) {\r\n      state.currentItemPrice = action.payload;\r\n    },\r\n    showCart(state) {\r\n      state.showCart = !state.showCart;\r\n    },\r\n    addItem(state, action) {\r\n      state.mealItems.push(action.payload.foodDetail);\r\n    },\r\n    totalCounter(state, action) {\r\n      state.totalCounter = state.totalCounter + action.payload;\r\n    },\r\n    totalAmount(state, action) {\r\n      state.totalAmount += +action.payload * +state.quantity;\r\n    },\r\n    setQuantity(state, action) {\r\n      state.quantity = action.payload;\r\n    },\r\n    updateQuantity(state, action) {\r\n      const { index } = action.payload;\r\n      const prevQuantity = state.mealItems[index].quantity;\r\n      state.mealItems[index].quantity = +prevQuantity + +state.quantity;\r\n    },\r\n    removeItem(state, action) {\r\n      const { id } = action.payload;\r\n      const selectedItemIndex = state.mealItems.findIndex(\r\n        (item) => item.id === id\r\n      );\r\n      if (state.mealItems[selectedItemIndex].quantity === +1) {\r\n        state.totalCounter -= 1;\r\n        state.totalAmount = state.totalAmount - state.currentItemPrice;\r\n        state.mealItems = state.mealItems.filter((item) => item.id !== id);\r\n      } else {\r\n        state.mealItems[selectedItemIndex].quantity--;\r\n        state.totalCounter -= 1;\r\n        state.totalAmount = state.totalAmount - state.currentItemPrice;\r\n      }\r\n    },\r\n    increaseItem(state, action) {\r\n      const { id } = action.payload;\r\n      state.totalCounter += 1;\r\n      const selectedItemIndex = state.mealItems.findIndex(\r\n        (item) => item.id === id\r\n      );\r\n      state.mealItems[selectedItemIndex].quantity =\r\n        parseInt(state.mealItems[selectedItemIndex].quantity) + 1;\r\n      state.totalAmount += state.currentItemPrice;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: foodSlice.reducer,\r\n});\r\n\r\nconst foodAction = foodSlice.actions;\r\n\r\nexport default store;\r\n\r\nexport { foodAction };\r\n"]},"metadata":{},"sourceType":"module"}